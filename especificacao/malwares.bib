@inproceedings{10.1145/3368756.3369098,
author = {Ikram, Ben Abdel Ouahab and Mohammed, Bouhorma and Abdelhakim, Boudhir Anouar and Lotfi, El Aachak and Zafar, Bassam},
title = {Machine Learning Application for Malwares Classification Using Visualization Technique},
year = {2019},
isbn = {9781450362894},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3368756.3369098},
doi = {10.1145/3368756.3369098},
abstract = {Nowadays attackers work hard to develop efficient cyberthreats and exploit new techniques. So defenders need to use advanced methodologies to combat the latest threats and safely remove them from computers, mobiles and connected devices. Without the intelligent techniques, these devices would be at increased risk of damage from malicious programs. Recently a novel approach of processing malwares was appeared; it passes from malware binaries into malware images. Researchers found similarities in malwares images by extracting specific features. This paper presents malwares classifier using KNN and malware visualization technique. We used a database of 9339 samples of malwares from 25 families. We calculated the GIST descriptor for grayscale malware images. Then a KNN model was trained and evaluated many times to reach a score of 97%, which is very close to results found on literature.},
booktitle = {Proceedings of the 4th International Conference on Smart City Applications},
articleno = {110},
numpages = {6},
keywords = {malwares classification, cybersecurity, machine learning and KNN, malware visualization technique},
location = {Casablanca, Morocco},
series = {SCA '19}
}


@inproceedings{10.1145/2967360.2967367,
author = {Song, Linhai and Huang, Heqing and Zhou, Wu and Wu, Wenfei and Zhang, Yiying},
title = {Learning from Big Malwares},
year = {2016},
isbn = {9781450342650},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2967360.2967367},
doi = {10.1145/2967360.2967367},
abstract = {This paper calls for the attention to investigate real-world malwares in large scales by examining the largest real malware repository, VirusTotal. As a first step, we analyzed two fundamental characteristics of Windows executable malwares from VirusTotal. We designed offline and online tools for this analysis. Our results show that malwares appear in bursts and that distributions of malwares are highly skewed.},
booktitle = {Proceedings of the 7th ACM SIGOPS Asia-Pacific Workshop on Systems},
articleno = {12},
numpages = {8},
location = {Hong Kong, Hong Kong},
series = {APSys '16}
}


@inproceedings{10.1145/3368756.3369091,
author = {Ilham, Soussi and Abderrahim, Ghadi and Abdelhakim, Boudhir Anouar},
title = {Deep Learning for Detecting Android Malwares},
year = {2019},
isbn = {9781450362894},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3368756.3369091},
doi = {10.1145/3368756.3369091},
abstract = {The revolution and development of malwares over time necessitate an intensive researches on advanced techniques to secure user's personal and critical information, the most challenging task is to build a strong and robust classifier allows to detect different types of malwares and being able to defeat zero-day malware attacks. Machine learning algorithms as SVM (support vector machine), Random Forest and Na\"{\i}ve Bayes are well-known choices for building the malware classifier, even though the deep learning which is a subfield of machine learning, has a portion in classifying android malwares with high precision. In this paper we present a modest study on difference between using both techniques and proposition of an approach based on deep learning technique applied on Apk of android applications belong to a heterogeneous data combined of benign and malware applications of different types.},
booktitle = {Proceedings of the 4th International Conference on Smart City Applications},
articleno = {104},
numpages = {4},
keywords = {convolutional neural network, API calls, static analysis, Android malware, classification, deep learning, machine learning},
location = {Casablanca, Morocco},
series = {SCA '19}
}


@inproceedings{10.1145/3386723.3387839,
author = {Ikram, Ben Abdel Ouahab and Lotfi, El Aachak and Abdelhakim, Boudhir Anouar and Mohammed, Bouhorma},
title = {Speedy and Efficient Malwares Images Classifier Using Reduced GIST Features for a New Defense Guide},
year = {2020},
isbn = {9781450376341},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3386723.3387839},
doi = {10.1145/3386723.3387839},
abstract = {Malwares attacks are becoming increasingly destructive. Hackers target all types of devices from big to the most little ones. Researcher's communities in cybersecurity field are working hard to defend malwares attacks as well as any other malicious activity. In fact, the primary goal is to defend cyberattacks as fast as possible to avoid catastrophic damages. In this paper, we proposed new cybersecurity architecture specialized in malwares attacks defense. This proposal puts together four layers based on malwares behaviors. In addition, we perform malware classifier using malware visualization technique, GIST descriptor features and K-Nearest Neighbor algorithm. The classifier is able to put each input malware image into its corresponding family. Families distribution is been divided by malwares behaviors. For the purpose of attaining speedy malwares classifier, we use Univariate Feature Selection technique to reduce GIST feature. So we succeeded in getting from 320 to only 50 features in less timing with very close accuracy of 97,67%.},
booktitle = {Proceedings of the 3rd International Conference on Networking, Information Systems &amp; Security},
articleno = {20},
numpages = {6},
keywords = {malware visualization and Features selection, Machine learning, Cybersecurity, malware classification, k-nearest neighbor},
location = {Marrakech, Morocco},
series = {NISS2020}
}


@inproceedings{10.1145/3154273.3154326,
author = {Sethi, Kamalakanta and Chaudhary, Shankar Kumar and Tripathy, Bata Krishan and Bera, Padmalochan},
title = {A Novel Malware Analysis Framework for Malware Detection and Classification Using Machine Learning Approach},
year = {2018},
isbn = {9781450363723},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3154273.3154326},
doi = {10.1145/3154273.3154326},
abstract = {Nowadays, the digitization of the world is under a serious threat due to the emergence of various new and complex malware every day. Due to this, the traditional signature-based methods for detection of malware effectively become an obsolete method. The efficiency of the machine learning techniques in context to the detection of malwares has been proved by state-of-the-art research works. In this paper, we have proposed a framework to detect and classify different files (e.g., exe, pdf, php, etc.) as benign and malicious using two level classifier namely, Macro (for detection of malware) and Micro (for classification of malware files as a Trojan, Spyware, Ad-ware, etc.). Our solution uses Cuckoo Sandbox for generating static and dynamic analysis report by executing the sample files in the virtual environment. In addition, a novel feature extraction module has been developed which functions based on static, behavioral and network analysis using the reports generated by the Cuckoo Sandbox. Weka Framework is used to develop machine learning models by using training datasets. The experimental results using the proposed framework shows high detection rate and high classification rate using different machine learning algorithms},
booktitle = {Proceedings of the 19th International Conference on Distributed Computing and Networking},
articleno = {49},
numpages = {4},
keywords = {SMO, Malware Detection, Malware Classification, Cuckoo Sandbox, Static and Dynamic Analysis},
location = {Varanasi, India},
series = {ICDCN '18}
}


@inproceedings{10.1145/3338840.3355693,
author = {Lee, Yena and Kim, Yongmin and Lee, Seungyeon and Heo, Junyoung and Hong, Jiman},
title = {Machine Learning Based Android Malware Classification},
year = {2019},
isbn = {9781450368438},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3338840.3355693},
doi = {10.1145/3338840.3355693},
abstract = {As growing Android smart-phones, malware threatens smart-phones is also increasing. There are many types of Android malwares. To detect these Android malwares effectively, first, we need to classify Android malwares. In this paper, we build a database storing Android malwares and their types and characteristics. With the database, we propose a machine learning model to classify the malwares. To evaluate the model, we conducted k-fold cross validation. Through the evaluation, our model showed over 85% accuracy in the malware classification.},
booktitle = {Proceedings of the Conference on Research in Adaptive and Convergent Systems},
pages = {300â€“302},
numpages = {3},
keywords = {malware database, malware classification, machine learning, Android mawlare},
location = {Chongqing, China},
series = {RACS '19}
}


@inproceedings{10.1145/2905055.2905361,
author = {Kunwar, Rakesh Singh and Sharma, Priyanka},
title = {Malware Analysis: Tools and Techniques},
year = {2016},
isbn = {9781450339629},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2905055.2905361},
doi = {10.1145/2905055.2905361},
abstract = {Malicious code is a serious issue which regularly threatens the security of computer systems and act as a challenging task for cyber security&amp; Information security personals. Malicious code is named differently according to their specification such as virus, worm, Trojan, Rootkit, spam etc. Risk factor due to malwares increases exponentially with the advancement in technology. Malware analysis is divided into code (static) analysis, behavioral (dynamic) analysis. It depends upon the investigator to use the different tools and techniques for analysis. Static analysis is first line of defense against malware which is composed of malware detector and scanners. With the advancement in technology, Malware developer uses different kind of techniques to maintain its source code hide from these detectors or scanner to find out hash value, finding strings, pattern matching etc. to identify the malware. Whereas, malware analyst decompress the packed file into unpacked file &amp; investigate obfuscated malwares. In this paper, we try to investigate the different tool and techniques used in malware over practical working malwares.},
booktitle = {Proceedings of the Second International Conference on Information and Communication Technology for Competitive Strategies},
articleno = {144},
numpages = {4},
keywords = {Dynamic Malware analysis, Threats, Static Malware analysis, Security, Sandbox},
location = {Udaipur, India},
series = {ICTCS '16}
}


@inproceedings{10.1145/3409073.3409084,
author = {Congyi, Deng and Guangshun, Shi},
title = {Method for Detecting Android Malware Based on Ensemble Learning},
year = {2020},
isbn = {9781450377645},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3409073.3409084},
doi = {10.1145/3409073.3409084},
abstract = {In recent years, we have become increasingly dependent on smart devices. Android is an operating system mainly used on mobile devices, where hundreds of millions of users can download various apps through many application stores. Under these circumstances, a large number of malicious apps can be put into the application stores by developers to achieve the purpose of attacking, controlling user devices, and even stealing user information and property. Therefore, it is necessary to identify malwares in mass apps through analysis and detection to remind users. We propose an idea of detecting and discriminating Android malware based on an ensemble learning method. Firstly, a static analysis of AndroidManifest file in APK is performed to extract features such as permission calls, component calls, and intents in system. Then we use XGBoost method, an implementation of ensemble learning, to detect malicious applications. The conclusion is that this system performs very well in Android malware detection.},
booktitle = {Proceedings of the 2020 5th International Conference on Machine Learning Technologies},
pages = {28â€“31},
numpages = {4},
keywords = {Android Malware, Ensemble Learning, Malware Detection, Static Analysis},
location = {Beijing, China},
series = {ICMLT 2020}
}


@inproceedings{10.1145/3387168.3387218,
author = {Ahmad, Azuan and Shafiuddin, Wan and Kama, Mohd Nazri and Saudi, Madihah Mohd},
title = {A New Cryptojacking Malware Classifier Model Based on Dendritic Cell Algorithm},
year = {2019},
isbn = {9781450376259},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3387168.3387218},
doi = {10.1145/3387168.3387218},
abstract = {A new threat known as "cryptojacking" has entered the picture where cryptojacking malware is the future trend for cyber criminals, who infect victim's device, install cryptojacking malware, and use the stolen resources for crytocurrency mining. Worse comes to worst by 2020, researchers estimate there will be 30 billion of IoT devices in the world. IoT devices are vulnerable to attacks because of their simple configuration, unpatched vulnerability and weak passwords. IoT devices also prone to be poorly monitored because of their nature. There is lack of studies that provide in depth analysis on cryptojacking malware classification using machine learning approach where the current research mostly focused on manual analysis of web-based cryptojacking attacks. As IoT devices requires small processing capability, a lightweight model are required for the cryptojacking malware detection algorithm to maintain its accuracy without sacrificing the performance of other process. As a solution, we propose a new lightweight cryptojacking classifier model based on machine learning technique that may fit in a low processing capability environment such as IoT and Cyber Physical Systems (CPS). This paper aim to disscuss a new approach based on dendritic cell algorithm in order to provide a lightweight cryptojacking classifier model. The output of this paper will be significant used in detecting cryptojacking malware attacks that benefits multiple industries including cyber security contractors, oil and gas, water, power and energy industries.},
booktitle = {Proceedings of the 3rd International Conference on Vision, Image and Signal Processing},
articleno = {84},
numpages = {5},
keywords = {Cryptojacking, Malware, Cyber Security, Artificial Intelligence, Dendritic Cell Algorithm},
location = {Vancouver, BC, Canada},
series = {ICVISP 2019}
}


@article{10.1145/3329786,
author = {Or-Meir, Ori and Nissim, Nir and Elovici, Yuval and Rokach, Lior},
title = {Dynamic Malware Analysis in the Modern Eraâ€”A State of the Art Survey},
year = {2019},
issue_date = {October 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {5},
issn = {0360-0300},
url = {https://doi.org/10.1145/3329786},
doi = {10.1145/3329786},
abstract = {Although malicious software (malware) has been around since the early days of computers, the sophistication and innovation of malware has increased over the years. In particular, the latest crop of ransomware has drawn attention to the dangers of malicious software, which can cause harm to private users as well as corporations, public services (hospitals and transportation systems), governments, and security institutions. To protect these institutions and the public from malware attacks, malicious activity must be detected as early as possible, preferably before it conducts its harmful acts. However, it is not always easy to know what to look forâ€”especially when dealing with new and unknown malware that has never been seen. Analyzing a suspicious file by static or dynamic analysis methods can provide relevant and valuable information regarding a file's impact on the hosting system and help determine whether the file is malicious or not, based on the method's predefined rules. While various techniques (e.g., code obfuscation, dynamic code loading, encryption, and packing) can be used by malware writers to evade static analysis (including signature-based anti-virus tools), dynamic analysis is robust to these techniques and can provide greater understanding regarding the analyzed file and consequently can lead to better detection capabilities. Although dynamic analysis is more robust than static analysis, existing dynamic analysis tools and techniques are imperfect, and there is no single tool that can cover all aspects of malware behavior. The most recent comprehensive survey performed in this area was published in 2012. Since that time, the computing environment has changed dramatically with new types of malware (ransomware, cryptominers), new analysis methods (volatile memory forensics, side-channel analysis), new computing environments (cloud computing, IoT devices), new machine-learning algorithms, and more. The goal of this survey is to provide a comprehensive and up-to-date overview of existing methods used to dynamically analyze malware, which includes a description of each method, its strengths and weaknesses, and its resilience against malware evasion techniques. In addition, we include an overview of prominent studies presenting the usage of machine-learning methods to enhance dynamic malware analysis capabilities aimed at detection, classification, and categorization.},
journal = {ACM Comput. Surv.},
month = sep,
articleno = {88},
numpages = {48},
keywords = {evasion, detection, behavioral analysis, Dynamic analysis, malware}
}


@inproceedings{10.1145/1966913.1966940,
author = {Rhee, Junghwan and Lin, Zhiqiang and Xu, Dongyan},
title = {Characterizing Kernel Malware Behavior with Kernel Data Access Patterns},
year = {2011},
isbn = {9781450305648},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1966913.1966940},
doi = {10.1145/1966913.1966940},
abstract = {Characterizing malware behavior using its control flow faces several challenges, such as obfuscations in static analysis and the behavior variations in dynamic analysis. This paper introduces a new approach to characterizing kernel malware's behavior by using kernel data access patterns unique to the malware. The approach neither uses malware's control flow consisting of temporal ordering of malware code execution, nor the code-specific information about the malware. Thus, the malware signature based on such data access patterns is resilient in matching malware variants.To evaluate the effectiveness of this approach, we first generated the signatures of three classic rootkits using their data access patterns, and then matched them with a group of kernel execution instances which are benign or compromised by 16 kernel rootkits. The malware signatures did not trigger any false positives in benign kernel runs; however, kernel runs compromised by 16 rootkits were detected due to the data access patterns shared with the compared signature(s). We further observed similar data access patterns in the signatures of the tested rootkits and exposed popular rootkit attack operations by ranking common data behavior across rootkits. Our experiments show that our approach is effective not only to detect the malware whose signature is available, but also to determine its variants which share kernel data access patterns.},
booktitle = {Proceedings of the 6th ACM Symposium on Information, Computer and Communications Security},
pages = {207â€“216},
numpages = {10},
keywords = {kernel data access patterns, kernel malware signature, kernel malware analysis},
location = {Hong Kong, China},
series = {ASIACCS '11}
}


@inproceedings{10.1145/3372297.3417291,
author = {Zhang, Xiaohan and Zhang, Yuan and Zhong, Ming and Ding, Daizong and Cao, Yinzhi and Zhang, Yukun and Zhang, Mi and Yang, Min},
title = {Enhancing State-of-the-Art Classifiers with API Semantics to Detect Evolved Android Malware},
year = {2020},
isbn = {9781450370899},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372297.3417291},
doi = {10.1145/3372297.3417291},
abstract = {Machine learning (ML) classifiers have been widely deployed to detect Android malware, but at the same time the application of ML classifiers also faces an emerging problem. The performance of such classifiers degrades---or called ages---significantly over time given the malware evolution. Prior works have proposed to use retraining or active learning to reverse and improve aged models. However, the underlying classifier itself is still blind, unaware of malware evolution. Unsurprisingly, such evolution-insensitive retraining or active learning comes at a price, i.e., the labeling of tens of thousands of malware samples and the cost of significant human efforts. In this paper, we propose the first framework, called APIGraph, to enhance state-of-the-art malware classifiers with the similarity information among evolved Android malware in terms of semantically-equivalent or similar API usages, thus naturally slowing down classifier aging. Our evaluation shows that because of the slow-down of classifier aging, APIGraph saves significant amounts of human efforts required by active learning in labeling new malware samples.},
booktitle = {Proceedings of the 2020 ACM SIGSAC Conference on Computer and Communications Security},
pages = {757â€“770},
numpages = {14},
keywords = {model aging, api semantics, evolved malware detection},
location = {Virtual Event, USA},
series = {CCS '20}
}


@article{10.1145/3365001,
author = {Afianian, Amir and Niksefat, Salman and Sadeghiyan, Babak and Baptiste, David},
title = {Malware Dynamic Analysis Evasion Techniques: A Survey},
year = {2019},
issue_date = {January 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {6},
issn = {0360-0300},
url = {https://doi.org/10.1145/3365001},
doi = {10.1145/3365001},
abstract = {The cyber world is plagued with ever-evolving malware that readily infiltrate all defense mechanisms, operate viciously unbeknownst to the user, and surreptitiously exfiltrate sensitive data. Understanding the inner workings of such malware provides a leverage to effectively combat them. This understanding is pursued often through dynamic analysis which is conducted manually or automatically. Malware authors accordingly, have devised and advanced evasion techniques to thwart or evade these analyses. In this article, we present a comprehensive survey on malware dynamic analysis evasion techniques. In addition, we propose a detailed classification of these techniques and further demonstrate how their efficacy holds against different types of detection and analysis approaches.Our observations attest that evasive behavior is mostly concerned with detecting and evading sandboxes. The primary tactic of such malware we argue is fingerprinting followed by new trends for reverse Turing test tactic which aims at detecting human interaction. Furthermore, we will posit that the current defensive strategies, beginning with reactive methods to endeavors for more transparent analysis systems, are readily foiled by zero-day fingerprinting techniques or other evasion tactics such as stalling. Accordingly, we would recommend the pursuit of more generic defensive strategies with an emphasis on path exploration techniques that has the potential to thwart all the evasive tactics.},
journal = {ACM Comput. Surv.},
month = nov,
articleno = {126},
numpages = {28},
keywords = {sandbox evasion, Malware, evasion techniques, anti-debugging}
}


@article{10.1145/3351881,
author = {Alaeiyan, Mohammadhadi and Dehghantanha, Ali and Dargahi, Tooska and Conti, Mauro and Parsa, Saeed},
title = {A Multilabel Fuzzy Relevance Clustering System for Malware Attack Attribution in the Edge Layer of Cyber-Physical Networks},
year = {2020},
issue_date = {May 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {3},
issn = {2378-962X},
url = {https://doi.org/10.1145/3351881},
doi = {10.1145/3351881},
abstract = {The rapid increase in the number of malicious programs has made malware forensics a daunting task and caused usersâ€™ systems to become in danger. Timely identification of malware characteristics including its origin and the malware sample family would significantly limit the potential damage of malware. This is a more profound risk in Cyber-Physical Systems (CPSs), where a malware attack may cause significant physical damage to the infrastructure. Due to limited on-device available memory and processing power in CPS devices, most of the efforts for protecting CPS networks are focused on the edge layer, where the majority of security mechanisms are deployed.Since the majority of advanced and sophisticated malware programs are combining features from different families, these malicious programs are not similar enough to any existing malware family and easily evade binary classifier detection. Therefore, in this article, we propose a novel multilabel fuzzy clustering system for malware attack attribution. Our system is deployed on the edge layer to provide insight into applicable malware threats to the CPS network. We leverage static analysis by utilizing Opcode frequencies as the feature space to classify malware families.We observed that a multilabel classifier does not classify a part of samples. We named this problem the instance coverage problem. To overcome this problem, we developed an ensemble-based multilabel fuzzy classification method to suggest the relevance of a malware instance to the stricken families. This classifier identified samples of VirusShare, RansomwareTracker, and BIG2015 with an accuracy of 94.66%, 94.26%, and 97.56%, respectively.},
journal = {ACM Trans. Cyber-Phys. Syst.},
month = mar,
articleno = {31},
numpages = {22},
keywords = {IoT, fuzzy classification, cyber-physical systems, instance coverage, CPS, malware classification, Edge layer, Internet of Things}
}


